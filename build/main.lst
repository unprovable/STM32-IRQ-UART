ARM GAS  /tmp/ccPwW5gC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.syntax unified
  18              		.thumb
  19              		.thumb_func
  20              		.fpu softvfp
  22              	MX_GPIO_Init:
  23              	.LFB67:
  24              		.file 1 "Src/main.c"
   1:Src/main.c    **** #include "stm32f1xx_hal.h"
   2:Src/main.c    **** #include "stm32f1xx_it.h"
   3:Src/main.c    **** #include "stm32f1xx_hal_gpio.h"
   4:Src/main.c    **** #include "stm32f1xx_hal_usart.h"
   5:Src/main.c    **** #include <string.h>
   6:Src/main.c    **** #include <stdio.h>
   7:Src/main.c    **** 
   8:Src/main.c    **** // Prrrrrototypes
   9:Src/main.c    **** void SystemClock_Config(void);
  10:Src/main.c    **** static void MX_GPIO_Init(void);
  11:Src/main.c    **** static void MX_USART1_UART_Init(void);
  12:Src/main.c    **** void toggleLED(void);
  13:Src/main.c    **** 
  14:Src/main.c    **** UART_HandleTypeDef UartHandle;      
  15:Src/main.c    **** __IO ITStatus UartReady = RESET;    
  16:Src/main.c    **** 
  17:Src/main.c    **** #define RXBUFFERSIZE    10
  18:Src/main.c    **** uint8_t aRxBuffer[RXBUFFERSIZE];    
  19:Src/main.c    **** 
  20:Src/main.c    **** char buffbuff[100];
  21:Src/main.c    **** int main(void)
  22:Src/main.c    **** {
  23:Src/main.c    ****     //Inits
  24:Src/main.c    ****     HAL_Init();
  25:Src/main.c    ****     SystemClock_Config();
  26:Src/main.c    ****     MX_GPIO_Init();
  27:Src/main.c    ****     MX_USART1_UART_Init();
  28:Src/main.c    ****     // this? well, why the f*ck not...
  29:Src/main.c    ****     HAL_UART_MspInit(&UartHandle);
  30:Src/main.c    ****     // error check the UART...
  31:Src/main.c    ****     if (HAL_UART_Receive_IT(&UartHandle, (uint8_t *)aRxBuffer, RXBUFFERSIZE) != HAL_OK) {
  32:Src/main.c    ****         Error_Handler();
  33:Src/main.c    ****     }
  34:Src/main.c    ****     sprintf(buffbuff, "This is me testing...\r\n>>>\r\n");
ARM GAS  /tmp/ccPwW5gC.s 			page 2


  35:Src/main.c    ****     HAL_UART_Transmit(&UartHandle, (uint8_t*)buffbuff, 90, 1000);
  36:Src/main.c    ****     while (1) { // main loop
  37:Src/main.c    ****         if (UartReady != SET) {
  38:Src/main.c    ****             /* do shit all...*/
  39:Src/main.c    ****         }
  40:Src/main.c    ****         else {
  41:Src/main.c    ****             /* UART 상태 리셋 */
  42:Src/main.c    ****             UartReady = RESET;
  43:Src/main.c    ****             sprintf(buffbuff, "Keypress!");
  44:Src/main.c    ****             HAL_UART_Transmit(&UartHandle, (uint8_t*)buffbuff, 90, 1000);
  45:Src/main.c    ****         }
  46:Src/main.c    ****     }
  47:Src/main.c    **** 
  48:Src/main.c    **** }
  49:Src/main.c    **** 
  50:Src/main.c    **** 
  51:Src/main.c    **** /**
  52:Src/main.c    ****   * @brief  Rx Transfer completed callback
  53:Src/main.c    ****   * @param  UartHandle: UART handle
  54:Src/main.c    ****   * @retval None
  55:Src/main.c    ****   */
  56:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *UartHandle)
  57:Src/main.c    **** {
  58:Src/main.c    ****     UartReady = SET;
  59:Src/main.c    **** }
  60:Src/main.c    **** 
  61:Src/main.c    **** // there's a line in main.h that links error_handler to this...
  62:Src/main.c    **** void _Error_Handler(char * file, int line)
  63:Src/main.c    **** {
  64:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
  65:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
  66:Src/main.c    ****   uint8_t *errBuf[100];
  67:Src/main.c    ****   sprintf(buffbuff, "[!] oops... something went wrong!");
  68:Src/main.c    ****       HAL_UART_Transmit(&UartHandle, (uint8_t*)errBuf, 35, 1000);
  69:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
  70:Src/main.c    **** }
  71:Src/main.c    **** 
  72:Src/main.c    **** static void MX_GPIO_Init(void)
  73:Src/main.c    **** {
  25              		.loc 1 73 0
  26              		.cfi_startproc
  27              		@ args = 0, pretend = 0, frame = 24
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29 0000 10B5     		push	{r4, lr}
  30              	.LCFI0:
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  34 0002 86B0     		sub	sp, sp, #24
  35              	.LCFI1:
  36              		.cfi_def_cfa_offset 32
  37              	.LBB2:
  74:Src/main.c    **** 
  75:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct;
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* GPIO Ports Clock Enable */
  78:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  /tmp/ccPwW5gC.s 			page 3


  38              		.loc 1 78 0
  39 0004 134B     		ldr	r3, .L3
  40 0006 9A69     		ldr	r2, [r3, #24]
  41 0008 42F01002 		orr	r2, r2, #16
  42 000c 9A61     		str	r2, [r3, #24]
  43 000e 9A69     		ldr	r2, [r3, #24]
  44 0010 02F01002 		and	r2, r2, #16
  45 0014 0092     		str	r2, [sp]
  46 0016 009A     		ldr	r2, [sp]
  47              	.LBE2:
  48              	.LBB3:
  79:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  49              		.loc 1 79 0
  50 0018 9A69     		ldr	r2, [r3, #24]
  51 001a 42F00402 		orr	r2, r2, #4
  52 001e 9A61     		str	r2, [r3, #24]
  53 0020 9B69     		ldr	r3, [r3, #24]
  54 0022 03F00403 		and	r3, r3, #4
  55 0026 0193     		str	r3, [sp, #4]
  56 0028 019B     		ldr	r3, [sp, #4]
  57              	.LBE3:
  80:Src/main.c    **** 
  81:Src/main.c    ****   /*Configure GPIO pin Output Level */
  82:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  58              		.loc 1 82 0
  59 002a 0B4C     		ldr	r4, .L3+4
  60 002c 0022     		movs	r2, #0
  61 002e 4FF40051 		mov	r1, #8192
  62 0032 2046     		mov	r0, r4
  63 0034 FFF7FEFF 		bl	HAL_GPIO_WritePin
  64              	.LVL0:
  83:Src/main.c    **** 
  84:Src/main.c    ****   /*Configure GPIO pin : PC13 */
  85:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  65              		.loc 1 85 0
  66 0038 4FF40053 		mov	r3, #8192
  67 003c 0293     		str	r3, [sp, #8]
  86:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  68              		.loc 1 86 0
  69 003e 0123     		movs	r3, #1
  70 0040 0393     		str	r3, [sp, #12]
  87:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  71              		.loc 1 87 0
  72 0042 0223     		movs	r3, #2
  73 0044 0593     		str	r3, [sp, #20]
  88:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
  74              		.loc 1 88 0
  75 0046 02A9     		add	r1, sp, #8
  76 0048 2046     		mov	r0, r4
  77 004a FFF7FEFF 		bl	HAL_GPIO_Init
  78              	.LVL1:
  89:Src/main.c    **** 
  90:Src/main.c    **** }
  79              		.loc 1 90 0
  80 004e 06B0     		add	sp, sp, #24
  81              	.LCFI2:
  82              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccPwW5gC.s 			page 4


  83              		@ sp needed
  84 0050 10BD     		pop	{r4, pc}
  85              	.L4:
  86 0052 00BF     		.align	2
  87              	.L3:
  88 0054 00100240 		.word	1073876992
  89 0058 00100140 		.word	1073811456
  90              		.cfi_endproc
  91              	.LFE67:
  93              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
  94              		.align	1
  95              		.global	HAL_UART_RxCpltCallback
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	HAL_UART_RxCpltCallback:
 102              	.LFB65:
  57:Src/main.c    ****     UartReady = SET;
 103              		.loc 1 57 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 108              	.LVL2:
  58:Src/main.c    **** }
 109              		.loc 1 58 0
 110 0000 0122     		movs	r2, #1
 111 0002 014B     		ldr	r3, .L6
 112 0004 1A70     		strb	r2, [r3]
 113 0006 7047     		bx	lr
 114              	.L7:
 115              		.align	2
 116              	.L6:
 117 0008 00000000 		.word	.LANCHOR0
 118              		.cfi_endproc
 119              	.LFE65:
 121              		.section	.text._Error_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	_Error_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	_Error_Handler:
 130              	.LFB66:
  63:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 131              		.loc 1 63 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 400
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              	.LVL3:
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI3:
 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
ARM GAS  /tmp/ccPwW5gC.s 			page 5


 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 E5B0     		sub	sp, sp, #404
 145              	.LCFI4:
 146              		.cfi_def_cfa_offset 424
  67:Src/main.c    ****       HAL_UART_Transmit(&UartHandle, (uint8_t*)errBuf, 35, 1000);
 147              		.loc 1 67 0
 148 0004 0C4E     		ldr	r6, .L11
 149 0006 0D4C     		ldr	r4, .L11+4
 150 0008 06F12007 		add	r7, r6, #32
 151              	.LVL4:
 152              	.L9:
 153 000c 3546     		mov	r5, r6
 154 000e 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 155 0010 2060     		str	r0, [r4]	@ unaligned
 156 0012 6160     		str	r1, [r4, #4]	@ unaligned
 157 0014 A260     		str	r2, [r4, #8]	@ unaligned
 158 0016 E360     		str	r3, [r4, #12]	@ unaligned
 159 0018 2E46     		mov	r6, r5
 160 001a 1034     		adds	r4, r4, #16
 161 001c BD42     		cmp	r5, r7
 162 001e F5D1     		bne	.L9
 163 0020 2B88     		ldrh	r3, [r5]	@ unaligned
 164 0022 2380     		strh	r3, [r4]	@ unaligned
  68:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 165              		.loc 1 68 0
 166 0024 4FF47A73 		mov	r3, #1000
 167 0028 2322     		movs	r2, #35
 168 002a 6946     		mov	r1, sp
 169 002c 0448     		ldr	r0, .L11+8
 170 002e FFF7FEFF 		bl	HAL_UART_Transmit
 171              	.LVL5:
  70:Src/main.c    **** 
 172              		.loc 1 70 0
 173 0032 65B0     		add	sp, sp, #404
 174              	.LCFI5:
 175              		.cfi_def_cfa_offset 20
 176              		@ sp needed
 177 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 178              	.L12:
 179 0036 00BF     		.align	2
 180              	.L11:
 181 0038 00000000 		.word	.LC0
 182 003c 00000000 		.word	buffbuff
 183 0040 00000000 		.word	UartHandle
 184              		.cfi_endproc
 185              	.LFE66:
 187              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 188              		.align	1
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu softvfp
 194              	MX_USART1_UART_Init:
 195              	.LFB69:
  91:Src/main.c    **** 
ARM GAS  /tmp/ccPwW5gC.s 			page 6


  92:Src/main.c    **** void SystemClock_Config(void)
  93:Src/main.c    **** {
  94:Src/main.c    **** 
  95:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  96:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  97:Src/main.c    **** 
  98:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
  99:Src/main.c    ****     */
 100:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 101:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 102:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 103:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 104:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 105:Src/main.c    ****   {
 106:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 107:Src/main.c    ****   }
 108:Src/main.c    **** 
 109:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 110:Src/main.c    ****     */
 111:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 112:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 113:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 114:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 115:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 116:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 117:Src/main.c    **** 
 118:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 119:Src/main.c    ****   {
 120:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 121:Src/main.c    ****   }
 122:Src/main.c    **** 
 123:Src/main.c    ****     /**Configure the Systick interrupt time 
 124:Src/main.c    ****     */
 125:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 126:Src/main.c    **** 
 127:Src/main.c    ****     /**Configure the Systick 
 128:Src/main.c    ****     */
 129:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 130:Src/main.c    **** 
 131:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 132:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 133:Src/main.c    **** }
 134:Src/main.c    **** 
 135:Src/main.c    **** static void MX_USART1_UART_Init(void)
 136:Src/main.c    **** {
 196              		.loc 1 136 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 08B5     		push	{r3, lr}
 201              	.LCFI6:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 3, -8
 204              		.cfi_offset 14, -4
 137:Src/main.c    **** 
 138:Src/main.c    ****   UartHandle.Instance = USART1;
 205              		.loc 1 138 0
ARM GAS  /tmp/ccPwW5gC.s 			page 7


 206 0002 0B48     		ldr	r0, .L17
 207 0004 0B4B     		ldr	r3, .L17+4
 208 0006 0360     		str	r3, [r0]
 139:Src/main.c    ****   UartHandle.Init.BaudRate = 115200;
 209              		.loc 1 139 0
 210 0008 4FF4E133 		mov	r3, #115200
 211 000c 4360     		str	r3, [r0, #4]
 140:Src/main.c    ****   UartHandle.Init.WordLength = UART_WORDLENGTH_8B;
 212              		.loc 1 140 0
 213 000e 0023     		movs	r3, #0
 214 0010 8360     		str	r3, [r0, #8]
 141:Src/main.c    ****   UartHandle.Init.StopBits = UART_STOPBITS_1;
 215              		.loc 1 141 0
 216 0012 C360     		str	r3, [r0, #12]
 142:Src/main.c    ****   UartHandle.Init.Parity = UART_PARITY_NONE;
 217              		.loc 1 142 0
 218 0014 0361     		str	r3, [r0, #16]
 143:Src/main.c    ****   UartHandle.Init.Mode = UART_MODE_TX_RX;
 219              		.loc 1 143 0
 220 0016 0C22     		movs	r2, #12
 221 0018 4261     		str	r2, [r0, #20]
 144:Src/main.c    ****   UartHandle.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 222              		.loc 1 144 0
 223 001a 8361     		str	r3, [r0, #24]
 145:Src/main.c    ****   UartHandle.Init.OverSampling = UART_OVERSAMPLING_16;
 224              		.loc 1 145 0
 225 001c C361     		str	r3, [r0, #28]
 146:Src/main.c    ****   if (HAL_UART_Init(&UartHandle) != HAL_OK)
 226              		.loc 1 146 0
 227 001e FFF7FEFF 		bl	HAL_UART_Init
 228              	.LVL6:
 229 0022 00B9     		cbnz	r0, .L16
 230              	.L13:
 231 0024 08BD     		pop	{r3, pc}
 232              	.L16:
 147:Src/main.c    ****   {
 148:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 233              		.loc 1 148 0
 234 0026 9421     		movs	r1, #148
 235 0028 0348     		ldr	r0, .L17+8
 236 002a FFF7FEFF 		bl	_Error_Handler
 237              	.LVL7:
 149:Src/main.c    ****   }
 150:Src/main.c    **** 
 151:Src/main.c    **** }
 238              		.loc 1 151 0
 239 002e F9E7     		b	.L13
 240              	.L18:
 241              		.align	2
 242              	.L17:
 243 0030 00000000 		.word	UartHandle
 244 0034 00380140 		.word	1073821696
 245 0038 00000000 		.word	.LC1
 246              		.cfi_endproc
 247              	.LFE69:
 249              		.section	.text.SystemClock_Config,"ax",%progbits
 250              		.align	1
ARM GAS  /tmp/ccPwW5gC.s 			page 8


 251              		.global	SystemClock_Config
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu softvfp
 257              	SystemClock_Config:
 258              	.LFB68:
  93:Src/main.c    **** 
 259              		.loc 1 93 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 64
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 00B5     		push	{lr}
 264              	.LCFI7:
 265              		.cfi_def_cfa_offset 4
 266              		.cfi_offset 14, -4
 267 0002 91B0     		sub	sp, sp, #68
 268              	.LCFI8:
 269              		.cfi_def_cfa_offset 72
 100:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 270              		.loc 1 100 0
 271 0004 0223     		movs	r3, #2
 272 0006 0693     		str	r3, [sp, #24]
 101:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 273              		.loc 1 101 0
 274 0008 0123     		movs	r3, #1
 275 000a 0A93     		str	r3, [sp, #40]
 102:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 276              		.loc 1 102 0
 277 000c 1023     		movs	r3, #16
 278 000e 0B93     		str	r3, [sp, #44]
 103:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 279              		.loc 1 103 0
 280 0010 0023     		movs	r3, #0
 281 0012 0D93     		str	r3, [sp, #52]
 104:Src/main.c    ****   {
 282              		.loc 1 104 0
 283 0014 06A8     		add	r0, sp, #24
 284 0016 FFF7FEFF 		bl	HAL_RCC_OscConfig
 285              	.LVL8:
 286 001a F0B9     		cbnz	r0, .L23
 287              	.L20:
 111:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 288              		.loc 1 111 0
 289 001c 0F23     		movs	r3, #15
 290 001e 0193     		str	r3, [sp, #4]
 113:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 291              		.loc 1 113 0
 292 0020 0021     		movs	r1, #0
 293 0022 0291     		str	r1, [sp, #8]
 114:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 294              		.loc 1 114 0
 295 0024 0391     		str	r1, [sp, #12]
 115:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 296              		.loc 1 115 0
 297 0026 0491     		str	r1, [sp, #16]
 116:Src/main.c    **** 
ARM GAS  /tmp/ccPwW5gC.s 			page 9


 298              		.loc 1 116 0
 299 0028 0591     		str	r1, [sp, #20]
 118:Src/main.c    ****   {
 300              		.loc 1 118 0
 301 002a 01A8     		add	r0, sp, #4
 302 002c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 303              	.LVL9:
 304 0030 C0B9     		cbnz	r0, .L24
 305              	.L21:
 125:Src/main.c    **** 
 306              		.loc 1 125 0
 307 0032 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 308              	.LVL10:
 309 0036 0E4B     		ldr	r3, .L25
 310 0038 A3FB0030 		umull	r3, r0, r3, r0
 311 003c 8009     		lsrs	r0, r0, #6
 312 003e FFF7FEFF 		bl	HAL_SYSTICK_Config
 313              	.LVL11:
 129:Src/main.c    **** 
 314              		.loc 1 129 0
 315 0042 0420     		movs	r0, #4
 316 0044 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 317              	.LVL12:
 132:Src/main.c    **** }
 318              		.loc 1 132 0
 319 0048 0022     		movs	r2, #0
 320 004a 1146     		mov	r1, r2
 321 004c 4FF0FF30 		mov	r0, #-1
 322 0050 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 323              	.LVL13:
 133:Src/main.c    **** 
 324              		.loc 1 133 0
 325 0054 11B0     		add	sp, sp, #68
 326              	.LCFI9:
 327              		.cfi_remember_state
 328              		.cfi_def_cfa_offset 4
 329              		@ sp needed
 330 0056 5DF804FB 		ldr	pc, [sp], #4
 331              	.L23:
 332              	.LCFI10:
 333              		.cfi_restore_state
 106:Src/main.c    ****   }
 334              		.loc 1 106 0
 335 005a 6A21     		movs	r1, #106
 336 005c 0548     		ldr	r0, .L25+4
 337 005e FFF7FEFF 		bl	_Error_Handler
 338              	.LVL14:
 339 0062 DBE7     		b	.L20
 340              	.L24:
 120:Src/main.c    ****   }
 341              		.loc 1 120 0
 342 0064 7821     		movs	r1, #120
 343 0066 0348     		ldr	r0, .L25+4
 344 0068 FFF7FEFF 		bl	_Error_Handler
 345              	.LVL15:
 346 006c E1E7     		b	.L21
 347              	.L26:
ARM GAS  /tmp/ccPwW5gC.s 			page 10


 348 006e 00BF     		.align	2
 349              	.L25:
 350 0070 D34D6210 		.word	274877907
 351 0074 00000000 		.word	.LC1
 352              		.cfi_endproc
 353              	.LFE68:
 355              		.section	.text.main,"ax",%progbits
 356              		.align	1
 357              		.global	main
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 361              		.fpu softvfp
 363              	main:
 364              	.LFB64:
  22:Src/main.c    ****     //Inits
 365              		.loc 1 22 0
 366              		.cfi_startproc
 367              		@ Volatile: function does not return.
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370 0000 08B5     		push	{r3, lr}
 371              	.LCFI11:
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
  24:Src/main.c    ****     SystemClock_Config();
 375              		.loc 1 24 0
 376 0002 FFF7FEFF 		bl	HAL_Init
 377              	.LVL16:
  25:Src/main.c    ****     MX_GPIO_Init();
 378              		.loc 1 25 0
 379 0006 FFF7FEFF 		bl	SystemClock_Config
 380              	.LVL17:
  26:Src/main.c    ****     MX_USART1_UART_Init();
 381              		.loc 1 26 0
 382 000a FFF7FEFF 		bl	MX_GPIO_Init
 383              	.LVL18:
  27:Src/main.c    ****     // this? well, why the f*ck not...
 384              		.loc 1 27 0
 385 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 386              	.LVL19:
  29:Src/main.c    ****     // error check the UART...
 387              		.loc 1 29 0
 388 0012 1C4C     		ldr	r4, .L32
 389 0014 2046     		mov	r0, r4
 390 0016 FFF7FEFF 		bl	HAL_UART_MspInit
 391              	.LVL20:
  31:Src/main.c    ****         Error_Handler();
 392              		.loc 1 31 0
 393 001a 0A22     		movs	r2, #10
 394 001c 1A49     		ldr	r1, .L32+4
 395 001e 2046     		mov	r0, r4
 396 0020 FFF7FEFF 		bl	HAL_UART_Receive_IT
 397              	.LVL21:
 398 0024 18B1     		cbz	r0, .L28
  32:Src/main.c    ****     }
ARM GAS  /tmp/ccPwW5gC.s 			page 11


 399              		.loc 1 32 0
 400 0026 2021     		movs	r1, #32
 401 0028 1848     		ldr	r0, .L32+8
 402 002a FFF7FEFF 		bl	_Error_Handler
 403              	.LVL22:
 404              	.L28:
  34:Src/main.c    ****     HAL_UART_Transmit(&UartHandle, (uint8_t*)buffbuff, 90, 1000);
 405              		.loc 1 34 0
 406 002e 184D     		ldr	r5, .L32+12
 407 0030 184C     		ldr	r4, .L32+16
 408 0032 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 409 0034 2860     		str	r0, [r5]	@ unaligned
 410 0036 6960     		str	r1, [r5, #4]	@ unaligned
 411 0038 AA60     		str	r2, [r5, #8]	@ unaligned
 412 003a EB60     		str	r3, [r5, #12]	@ unaligned
 413 003c 07CC     		ldmia	r4!, {r0, r1, r2}
 414 003e 2861     		str	r0, [r5, #16]	@ unaligned
 415 0040 6961     		str	r1, [r5, #20]	@ unaligned
 416 0042 AA61     		str	r2, [r5, #24]	@ unaligned
 417 0044 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 418 0046 2B77     		strb	r3, [r5, #28]
  35:Src/main.c    ****     while (1) { // main loop
 419              		.loc 1 35 0
 420 0048 4FF47A73 		mov	r3, #1000
 421 004c 5A22     		movs	r2, #90
 422 004e 2946     		mov	r1, r5
 423 0050 0C48     		ldr	r0, .L32
 424 0052 FFF7FEFF 		bl	HAL_UART_Transmit
 425              	.LVL23:
 426              	.L29:
  37:Src/main.c    ****             /* do shit all...*/
 427              		.loc 1 37 0
 428 0056 104B     		ldr	r3, .L32+20
 429 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 430 005a DBB2     		uxtb	r3, r3
 431 005c 012B     		cmp	r3, #1
 432 005e FAD1     		bne	.L29
  42:Src/main.c    ****             sprintf(buffbuff, "Keypress!");
 433              		.loc 1 42 0
 434 0060 0022     		movs	r2, #0
 435 0062 0D4B     		ldr	r3, .L32+20
 436 0064 1A70     		strb	r2, [r3]
  43:Src/main.c    ****             HAL_UART_Transmit(&UartHandle, (uint8_t*)buffbuff, 90, 1000);
 437              		.loc 1 43 0
 438 0066 0A4C     		ldr	r4, .L32+12
 439 0068 0C4B     		ldr	r3, .L32+24
 440 006a 03CB     		ldmia	r3!, {r0, r1}
 441 006c 2060     		str	r0, [r4]	@ unaligned
 442 006e 6160     		str	r1, [r4, #4]	@ unaligned
 443 0070 1B88     		ldrh	r3, [r3]	@ unaligned
 444 0072 2381     		strh	r3, [r4, #8]	@ unaligned
  44:Src/main.c    ****         }
 445              		.loc 1 44 0
 446 0074 4FF47A73 		mov	r3, #1000
 447 0078 5A22     		movs	r2, #90
 448 007a 2146     		mov	r1, r4
 449 007c 0148     		ldr	r0, .L32
ARM GAS  /tmp/ccPwW5gC.s 			page 12


 450 007e FFF7FEFF 		bl	HAL_UART_Transmit
 451              	.LVL24:
 452 0082 E8E7     		b	.L29
 453              	.L33:
 454              		.align	2
 455              	.L32:
 456 0084 00000000 		.word	UartHandle
 457 0088 00000000 		.word	aRxBuffer
 458 008c 00000000 		.word	.LC1
 459 0090 00000000 		.word	buffbuff
 460 0094 00000000 		.word	.LC2
 461 0098 00000000 		.word	.LANCHOR0
 462 009c 20000000 		.word	.LC3
 463              		.cfi_endproc
 464              	.LFE64:
 466              		.section	.text.toggleLED,"ax",%progbits
 467              		.align	1
 468              		.global	toggleLED
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 472              		.fpu softvfp
 474              	toggleLED:
 475              	.LFB70:
 152:Src/main.c    **** 
 153:Src/main.c    **** // for when we get to using it...
 154:Src/main.c    **** void toggleLED()
 155:Src/main.c    **** {
 476              		.loc 1 155 0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 0
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 480 0000 08B5     		push	{r3, lr}
 481              	.LCFI12:
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 3, -8
 484              		.cfi_offset 14, -4
 156:Src/main.c    ****     // this is basically just doing 
 157:Src/main.c    ****     // GPIOC->ODR ^= GPIO_PIN_13;
 158:Src/main.c    ****     // but who cares... HAL made it... bastards...
 159:Src/main.c    ****     HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 485              		.loc 1 159 0
 486 0002 4FF40051 		mov	r1, #8192
 487 0006 0248     		ldr	r0, .L36
 488 0008 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 489              	.LVL25:
 490 000c 08BD     		pop	{r3, pc}
 491              	.L37:
 492 000e 00BF     		.align	2
 493              	.L36:
 494 0010 00100140 		.word	1073811456
 495              		.cfi_endproc
 496              	.LFE70:
 498              		.comm	buffbuff,100,4
 499              		.comm	aRxBuffer,10,4
 500              		.global	UartReady
 501              		.comm	UartHandle,64,4
ARM GAS  /tmp/ccPwW5gC.s 			page 13


 502              		.section	.bss.UartReady,"aw",%nobits
 503              		.set	.LANCHOR0,. + 0
 506              	UartReady:
 507 0000 00       		.space	1
 508              		.section	.rodata.MX_USART1_UART_Init.str1.4,"aMS",%progbits,1
 509              		.align	2
 510              	.LC1:
 511 0000 5372632F 		.ascii	"Src/main.c\000"
 511      6D61696E 
 511      2E6300
 512              		.section	.rodata._Error_Handler.str1.4,"aMS",%progbits,1
 513              		.align	2
 514              	.LC0:
 515 0000 5B215D20 		.ascii	"[!] oops... something went wrong!\000"
 515      6F6F7073 
 515      2E2E2E20 
 515      736F6D65 
 515      7468696E 
 516              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 517              		.align	2
 518              	.LC2:
 519 0000 54686973 		.ascii	"This is me testing...\015\012>>>\015\012\000"
 519      20697320 
 519      6D652074 
 519      65737469 
 519      6E672E2E 
 520 001d 000000   		.space	3
 521              	.LC3:
 522 0020 4B657970 		.ascii	"Keypress!\000"
 522      72657373 
 522      2100
 523              		.text
 524              	.Letext0:
 525              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 526              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 527              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 528              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 529              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 530              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 531              		.file 8 "/usr/arm-none-eabi/include/sys/lock.h"
 532              		.file 9 "/usr/arm-none-eabi/include/sys/_types.h"
 533              		.file 10 "/usr/lib/gcc/arm-none-eabi/6.2.0/include/stddef.h"
 534              		.file 11 "/usr/arm-none-eabi/include/sys/reent.h"
 535              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 536              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 537              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 538              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 539              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 540              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 541              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 542              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccPwW5gC.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccPwW5gC.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccPwW5gC.s:22     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccPwW5gC.s:88     .text.MX_GPIO_Init:0000000000000054 $d
     /tmp/ccPwW5gC.s:94     .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccPwW5gC.s:101    .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccPwW5gC.s:117    .text.HAL_UART_RxCpltCallback:0000000000000008 $d
     /tmp/ccPwW5gC.s:122    .text._Error_Handler:0000000000000000 $t
     /tmp/ccPwW5gC.s:129    .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccPwW5gC.s:181    .text._Error_Handler:0000000000000038 $d
                            *COM*:0000000000000064 buffbuff
                            *COM*:0000000000000040 UartHandle
     /tmp/ccPwW5gC.s:188    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccPwW5gC.s:194    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccPwW5gC.s:243    .text.MX_USART1_UART_Init:0000000000000030 $d
     /tmp/ccPwW5gC.s:250    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccPwW5gC.s:257    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccPwW5gC.s:350    .text.SystemClock_Config:0000000000000070 $d
     /tmp/ccPwW5gC.s:356    .text.main:0000000000000000 $t
     /tmp/ccPwW5gC.s:363    .text.main:0000000000000000 main
     /tmp/ccPwW5gC.s:456    .text.main:0000000000000084 $d
                            *COM*:000000000000000a aRxBuffer
     /tmp/ccPwW5gC.s:467    .text.toggleLED:0000000000000000 $t
     /tmp/ccPwW5gC.s:474    .text.toggleLED:0000000000000000 toggleLED
     /tmp/ccPwW5gC.s:494    .text.toggleLED:0000000000000010 $d
     /tmp/ccPwW5gC.s:506    .bss.UartReady:0000000000000000 UartReady
     /tmp/ccPwW5gC.s:507    .bss.UartReady:0000000000000000 $d
     /tmp/ccPwW5gC.s:509    .rodata.MX_USART1_UART_Init.str1.4:0000000000000000 $d
     /tmp/ccPwW5gC.s:513    .rodata._Error_Handler.str1.4:0000000000000000 $d
     /tmp/ccPwW5gC.s:517    .rodata.main.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Transmit
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
HAL_UART_MspInit
HAL_UART_Receive_IT
HAL_GPIO_TogglePin
